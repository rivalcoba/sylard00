"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var Yup=_interopRequireWildcard(require("yup")),_User=_interopRequireDefault(require("../models/User")),_getSpokenLang=_interopRequireDefault(require("../helpers/getSpokenLang")),_getCountryObj=_interopRequireDefault(require("../helpers/getCountryObj"));function _interopRequireDefault(a){return a&&a.__esModule?a:{default:a}}function _getRequireWildcardCache(){if("function"!=typeof WeakMap)return null;var a=new WeakMap;return _getRequireWildcardCache=function(){return a},a}function _interopRequireWildcard(a){if(a&&a.__esModule)return a;if(null===a||"object"!=typeof a&&"function"!=typeof a)return{default:a};var b=_getRequireWildcardCache();if(b&&b.has(a))return b.get(a);var c={},d=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var e in a)if(Object.prototype.hasOwnProperty.call(a,e)){var f=d?Object.getOwnPropertyDescriptor(a,e):null;f&&(f.get||f.set)?Object.defineProperty(c,e,f):c[e]=a[e]}return c.default=a,b&&b.set(a,c),c}// import "@babel/polyfill"
// Importing validation framework
// Creating validation schema
// All we need from the confirmation email is the token
const UserRegistrationSchema=Yup.object().shape({name:Yup.string().required("Se requiere ingresar nombre"),lastName:Yup.string().required("Se requiere ingresar apellido"),email:Yup.string().email().required("Se requiere ingresar un correo valido"),role:Yup.string().oneOf(["colaborator","visitor"]).required("Se requiere proporcionar un rol"),password:Yup.string().min(6).required("Se requiere ingresar password de al menos 6 caracteres"),confirmationPassword:Yup.string().oneOf([Yup.ref("password")],"Los passwords ingresados no coinciden"),about:Yup.string().max(500,"El texto no debe exceder los 500 car\xE1cteres")});var _default=async(a,b,c)=>{try{a.body.role="undefined"==typeof a.body.role?"visitor":"colaborator";const{name:d,lastName:e,email:f,password:g,confirmationPassword:h,role:i}=a.body;let{spokenLanguages:j,country:k}=a.body;// Parsing Spoken languages
if(a.body.spokenLanguages=(0,_getSpokenLang.default)(j),k=(0,_getCountryObj.default)(k),k)a.body.country=k;else throw new Yup.ValidationError(`Pais no reconocido: "${a.body.country}"`,"country","/auth/register/user");// Backend form validation
await UserRegistrationSchema.validate({name:d,lastName:e,email:f,password:g,confirmationPassword:h,role:i});// by email
const l=await _User.default.findOne({email:a.body.email});// If user was not found, its ok...
l?(a.flash("error_msg",`El usuario con el correo "${a.body.email}" ya existe.`),b.redirect("/auth/register")):c()}catch(c){console.log(`duplicateUserValidation> ${c.message}`),a.flash("error_msg",`Formulario incorrecto: ${c.message}`),b.redirect("/auth/register")}};exports.default=_default;