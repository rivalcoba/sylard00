"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var Yup=_interopRequireWildcard(require("yup")),_getSpokenLang=_interopRequireDefault(require("../helpers/getSpokenLang")),_getCountryObj=_interopRequireDefault(require("../helpers/getCountryObj")),_auth=_interopRequireDefault(require("../routes/auth"));function _interopRequireDefault(a){return a&&a.__esModule?a:{default:a}}function _getRequireWildcardCache(){if("function"!=typeof WeakMap)return null;var a=new WeakMap;return _getRequireWildcardCache=function(){return a},a}function _interopRequireWildcard(a){if(a&&a.__esModule)return a;if(null===a||"object"!=typeof a&&"function"!=typeof a)return{default:a};var b=_getRequireWildcardCache();if(b&&b.has(a))return b.get(a);var c={},d=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var e in a)if(Object.prototype.hasOwnProperty.call(a,e)){var f=d?Object.getOwnPropertyDescriptor(a,e):null;f&&(f.get||f.set)?Object.defineProperty(c,e,f):c[e]=a[e]}return c.default=a,b&&b.set(a,c),c}// import "@babel/polyfill"
// Importing validation framework
// import User from '@models/User';
// Creating validation schema
// All we need from the confirmation email is the token
const UserRegistrationSchema=Yup.object().shape({name:Yup.string().required("Se requiere ingresar nombre"),lastName:Yup.string().required("Se requiere ingresar apellido"),email:Yup.string().email().required("Se requiere ingresar un correo valido"),about:Yup.string().max(500,"El texto no debe exceder los 500 car\xE1cteres"),country:Yup.string().required("No ingreso un pa\xEDs de origen de la lista")});var _default=async(a,b,c)=>{try{// Extracting data
const{name:b,lastName:d,email:e,about:f}=a.body;let{spokenLanguages:g,country:h}=a.body;// Parsing Spoken languages
// Parsing Country
// Backend form validation
a.body.spokenLanguages=(0,_getSpokenLang.default)(g),h=(0,_getCountryObj.default)(h),h&&(a.body.country=h),await UserRegistrationSchema.validate({name:b,lastName:d,email:e,about:f,country:h}),c()}catch(c){console.log(`editUserFormValidation>errors> ${c.errors}`),a.flash("error_msg",`Formulario incorrecto: ${c.message}`),b.redirect("/user/edit")}};exports.default=_default;