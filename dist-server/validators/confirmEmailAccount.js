"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var Yup=_interopRequireWildcard(require("yup")),_User=_interopRequireDefault(require("../models/User"));function _interopRequireDefault(a){return a&&a.__esModule?a:{default:a}}function _getRequireWildcardCache(){if("function"!=typeof WeakMap)return null;var a=new WeakMap;return _getRequireWildcardCache=function(){return a},a}function _interopRequireWildcard(a){if(a&&a.__esModule)return a;if(null===a||"object"!=typeof a&&"function"!=typeof a)return{default:a};var b=_getRequireWildcardCache();if(b&&b.has(a))return b.get(a);var c={},d=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var e in a)if(Object.prototype.hasOwnProperty.call(a,e)){var f=d?Object.getOwnPropertyDescriptor(a,e):null;f&&(f.get||f.set)?Object.defineProperty(c,e,f):c[e]=a[e]}return c.default=a,b&&b.set(a,c),c}// Importing validation framework
const ConfirmEmailAccountSchema=Yup.string().email("Ingrese un correo valido").required("Se requiere ingresar un correo electronico");var _default=async(a,b,c)=>{try{const{email:b}=a.body;// Validates the existence of a valid token
await ConfirmEmailAccountSchema.validate(b);// Checking if the email is valid for any account!!
const d=await _User.default.findOne({email:b});// If the user was not found
if(!d)throw console.log("confirmEmailAccount> No se encontro usuario"),new Yup.ValidationError(`Invalid Confirmation Code: No se encontro usuario`,a.body,"email");// If the user was found
// We continue with the process
console.log("confirmEmailAccount> Existe el Correo en la base de datos"),a.user=d,c()}catch(c){a.flash("error_msg","Cuenta o correo inexistentes"),b.redirect("/")}};exports.default=_default;